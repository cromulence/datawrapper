buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'gradle.plugin.co.riiid:gradle-github-plugin:0.4.2'   
    }
}

plugins {
    //google "gradle build scan" or https://github.com/gradle/gradle-build-scan-quickstart
    // essentially, ./gradlew build -Dscan
    id 'com.gradle.build-scan' version '1.0' //google "gradle build scan"
    id "com.google.cloud.artifactregistry.gradle-plugin" version "2.2.0"
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'checkstyle'
    apply plugin: 'maven-publish'
    apply plugin: "com.google.cloud.artifactregistry.gradle-plugin"

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url  "artifactregistry://europe-west2-maven.pkg.dev/cromulence/nexus"
        }
    }

//    apply plugin: 'java'
//    apply plugin: 'eclipse'
//    apply plugin: 'idea'
//    apply plugin: 'checkstyle'
//    //apply plugin: 'travis-bintray'
//    apply plugin: 'maven-publish'
//    apply("com.google.cloud.artifactregistry.gradle-plugin")

    //apply plugin: 'nebula.lint'

    group = gavGroup
    //gradleLint.rules = ['all-dependency'] // add as many rules here as you'd like
    //gradleLint.rules = ['unused-dependency'] // add as many rules here as you'd like

  checkstyle {
    ignoreFailures = true
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
  }

}

subprojects {

    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    project.version = rootProject.version

    compileJava {
        options.debug = true
        options.debugOptions.debugLevel = "source,lines,vars"
        options.encoding = 'UTF-8'
    }
    compileTestJava {
        options.debugOptions.debugLevel = "source,lines,vars"
    }
    javadoc {
        options.encoding = 'UTF-8'
        options.encoding = 'UTF-8'
    }

    // Clean Eclipse output directory as the Eclipse plugin does not do this by default
    clean.doFirst {
        delete 'bin'
    }

    compileJava.options.debug = true
    compileJava.options.debugOptions.debugLevel = "source,lines,vars"
    compileTestJava.options.debugOptions.debugLevel = "source,lines,vars"
    compileJava.options.encoding = 'UTF-8'

    eclipse {
        classpath {
            downloadJavadoc = true
        downloadSources = true
        }
    }


    
    test {
        testLogging {
            exceptionFormat 'full'
            events 'skipped', 'failed'
        }
    }
//    if(System.env['JAVA_HOME'] == null){
//        throw new GradleException('JAVA_HOME not set')
//    }

    if (project.plugins.hasPlugin('java')) {
        configurations {
            published
        }
    }

    // Insert following snippet into your build.gradle
// see docs.gradle.org/current/userguide/publishing_maven.html



    publishing {
      repositories {
        maven {
          url "artifactregistry://europe-west2-maven.pkg.dev/cromulence/nexus"
        }
      }
      publications {
       mavenJava(MavenPublication) {
          groupId  gavGroup
          from components.java
       }
      }
    }

    repositories {
      maven {
        url "artifactregistry://europe-west2-maven.pkg.dev/cromulence/nexus"
      }
    }
}

configurations {
    published
}

wrapper {
    gradleVersion = '7.6'
}

