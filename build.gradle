buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven {
          url "artifactregistry://europe-west2.maven.pkg.dev/cromulence/maven"
        }

    }
    dependencies {
        classpath "net.cromulence.buildsystem.gradle:travis-bintray:+"
    }
}

    //plugins loaded from special gradle plugin repo...
    plugins {
        //google "gradle build scan" or https://github.com/gradle/gradle-build-scan-quickstart
        // essentially, ./gradlew build -Dscan
        id 'com.gradle.build-scan' version '1.0' //google "gradle build scan"
        id "com.google.cloud.artifactregistry.gradle-plugin" version "2.2.0"
    }



allprojects {
  
    //plugins loaded from special gradle plugin repo...
    plugins {
        //google "gradle build scan" or https://github.com/gradle/gradle-build-scan-quickstart
        // essentially, ./gradlew build -Dscan
        id 'com.gradle.build-scan' version '1.0' //google "gradle build scan"
        id "com.google.cloud.artifactregistry.gradle-plugin" version "2.2.0"
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'checkstyle'

    //apply plugin: 'nebula.lint'

    group = gavGroup
    //gradleLint.rules = ['all-dependency'] // add as many rules here as you'd like
    //gradleLint.rules = ['unused-dependency'] // add as many rules here as you'd like

  checkstyle {
    ignoreFailures = true
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
  }

}

subprojects {

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    project.version = rootProject.version

    compileJava {
        options.debug = true
        options.debugOptions.debugLevel = "source,lines,vars"
        options.encoding = 'UTF-8'
    }
    compileTestJava {
        options.debugOptions.debugLevel = "source,lines,vars"
    }
    javadoc {
        options.encoding = 'UTF-8'
        options.encoding = 'UTF-8'
    }

    // Clean Eclipse output directory as the Eclipse plugin does not do this by default
    clean.doFirst {
        delete 'bin'
    }

    compileJava.options.debug = true
    compileJava.options.debugOptions.debugLevel = "source,lines,vars"
    compileTestJava.options.debugOptions.debugLevel = "source,lines,vars"
    compileJava.options.encoding = 'UTF-8'

    eclipse {
        classpath {
            downloadJavadoc = true
        downloadSources = true
        }
    }

    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "artifactregistry://europe-west2.maven.pkg.dev/cromulence/maven"
        }
    }
    
    test {
        testLogging {
            exceptionFormat 'full'
            events 'skipped', 'failed'
        }
    }
    if(System.env['JAVA_HOME'] == null){
        throw new GradleException('JAVA_HOME not set')
    }

    if (project.plugins.hasPlugin('java')) {
        configurations {
            published
        }
    }
}

configurations {
    published
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
